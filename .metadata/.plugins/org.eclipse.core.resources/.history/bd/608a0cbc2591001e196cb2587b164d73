package com.hilos;


//Bloque 3.1 - generando hilos con runnable:

public class A7_Runnable_Syncronized implements Runnable{

	/* Código para generar 1 hilo
	 *  
	public static void main(String[] args) {
		
		Runnable runnable = new A7_Runnable_Syncronized();
		Thread hilo1 = new Thread(runnable);
		hilo1.start();
		
		try {
			hilo1.join();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	*/
	
	
	/* Código para generar hilos con un vector 
	 */
	public static void main(String[] args) {
		
		Runtime runtime = Runtime.getRuntime();
		
		int nucleos = runtime.availableProcessors();
		
		Thread[]hilos = new Thread[nucleos];
		
		for(int i=0; i<hilos.length; i++) {
			
			//hilos[i] = new Thread(new A7_Runnable_Syncronized());				//manera 1
			
			Runnable runnable = new A7_Runnable_Syncronized();                  //manera 2
			hilos[i] = new Thread(runnable);                                    //manera 2
			
			hilos[i].start();	
		}
		
		for(int i=0; i<hilos.length; i++) {
			
			try {
				hilos[i].join();
			} catch (InterruptedException e) {		
				// TODO Auto-generated catch block
				e.printStackTrace();
			}	
			
		}
	}
	
	
	@Override
	public void run() {
		//System.out.println("Hola");
		
		for(int i=0; i<20000;i++) {
			cont++;
		}
		
	}
	
	
	private static int cont = 0; 
	
	

}
